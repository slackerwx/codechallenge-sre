version: 0.2
phases:
  install: # Install AWS cli, kubectl (needed for Helm) and Helm
    commands:
      - echo Set parameter
      - IMAGE_TAG=latest
      #   - DEPLOYMENT_NAME=[deployment name]

      - echo Logging to AWS ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNTID}.dkr.ecr.${REGION}.amazonaws.com

      - echo Installing necessary library...
      - apt-get update
      - apt install -y awscli git python3
      - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x kubectl
      - mv ./kubectl /usr/local/bin/kubectl

      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
  pre_build: # Add kubeconfig to access to EKS cluster
    commands:
      - echo Update kubeconfig...
#      - aws eks update-kubeconfig --name ${EKS_NAME} --region ${REGION}
#      - kubectl version
  build: # Build Docker image and tag it with the commit sha
    commands:
      - echo Building AUTH docker image...
      - docker build -t $AUTH_REPOSITORY_URI:latest -file auth/Dockerfile .
      - docker tag $AUTH_REPOSITORY_URI:latest $AUTH_REPOSITORY_URI:$IMAGE_TAG
      - echo Building BOOKING docker image...
      - docker build -t $BOOKING_REPOSITORY_URI:latest -file booking/Dockerfile .
      - docker tag $BOOKING_REPOSITORY_URI:latest $BOOKING_REPOSITORY_URI:$IMAGE_TAG
      - echo Building CLIENT docker image...
      - docker build -t $CLIENT_REPOSITORY_URI:latest -file client/Dockerfile .
      - docker tag $CLIENT_REPOSITORY_URI:latest $CLIENT_REPOSITORY_URI:$IMAGE_TAG
      - echo Building GRAPHQL docker image...
      - docker build -t $GRAPHQL_REPOSITORY_URI:latest -file graphql/Dockerfile .
      - docker tag $GRAPHQL_REPOSITORY_URI:latest $GRAPHQL_REPOSITORY_URI:$IMAGE_TAG
  post_build: # Push the Docker image to the ECR
    commands:
      - echo Pushing AUTH ECR
      - docker push $AUTH_REPOSITORY_URI:latest
      - docker push $AUTH_REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing BOOKING ECR
      - docker push $BOOKING_REPOSITORY_URI:latest
      - docker push $BOOKING_REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing CLIENT ECR
      - docker push $CLIENT_REPOSITORY_URI:latest
      - docker push $CLIENT_REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing GRAPHQL ECR
      - docker push $GRAPHQL_REPOSITORY_URI:latest
      - docker push $GRAPHQL_REPOSITORY_URI:$IMAGE_TAG
#   - echo Rollout new version
#   - echo kubectl set image deployment/$DEPLOYMENT_NAME [container name]=$REPOSITORY_URI:$IMAGE_TAG
#   - “kubectl set image deployment/$DEPLOYMENT_NAME [container name]=$REPOSITORY_URI:$IMAGE_TAG”
